{"src/Table.js":[{"description":"The `Table` component is the root component for this library.\nIt receives a reducer state (as a prop) and dispatcher (through the\n`TableDispatch` React context).\n\nThe table will trigger the following action to ask the reducer to alter its state.\n\n| Action            |  Parameters  | Description                                         |\n|-------------------|--------------|-----------------------------------------------------|\n| PAGING            | `<PagingType>` | Triggered when the user changes the page size or navigates to another page |\n| COLUMN_REORDERING | `<ColumnsType>` | Triggered when the user reorders columns   |\n| COLUMN_RESIZING   | `<ColumnsType>` | Triggered when the user resizes a column   |\n| SELECTING   | `<SelectionType>` | Triggered when the user changes the row selection |\n| SORTING   | `<SortType>` | Triggered when the user changes table sorting |\n| VSCROLL | `<VScrollType>` | Triggered when the table body is scrolled vertically |\n| CELL_RANGE | `<CellRangeType>` | Triggered when the user changes the cell range |\n\n`<PagingType>`\n\n| Key        | Type         | Description                                                                        |\n|------------|--------------|--------------------------|\n| pageIndex  | `<number>`   | The current page index   |\n| pageSize   | `<number>`   | The pagination page size |\n\n`<ColumnsType>`\n\n| Key        | Type         | Description                                                                        |\n|------------|--------------|--------------------------|\n| columns  | `PropTypes.arrayOf(ColumnType)`   | The updated table columns |\n\n`<SelectionType>`\n\n| Key        | Type         | Description                                                                        |\n|------------|--------------|--------------------------|\n| selectedIds  | `<object>` | The updated Set of currently selected row ids |\n\n`<SortType>`\n\n| Key        | Type         | Description                                                                        |\n|------------|--------------|--------------------------|\n| sort  | `<string>` | The column id used for sorting, prefixed by '+' for ascending sort or '-' for descending sort (used only for sorting)|\n\n`<VScrollType>`\n\n| Key        | Type         | Description                                                                        |\n|------------|--------------|--------------------------|\n| scrollTop  | `<number>` | the offset to the top of the table body element |","displayName":"Table","methods":[],"props":{"state":{"type":{"name":"custom","raw":"TableStateType"},"required":false,"description":"The current state of the table, as computed by the reducer\n\n| Key             | Type              | Description                                         |\n|-----------------|-------------------|-----------------------------------------------------|\n| data | `PropTypes.arrayOf(PropTypes.object)` | An array of table rows |\n| columns | `PropTypes.arrayOf(ColumnType)` | An array of table columns |\n| total      | `<number>` | The total number of rows in the table (used only for pagination) |\n| pageIndex | `<number>` | The current page index (used only for pagination) |\n| pageSize  | `<number>` | The page size for table pages (used only for pagination) |\n| pageCount | `<number>` | The total number of pages in the table (used only for pagination) |\n| sort | `<string>` | The column id used for sorting, prefixed by '+' for ascending sort or '-' for descending sort (used only for sorting)\n| selectedIds | `<object>` | a Set of ids currently selected (used only for selection)\n| loading | `<bool>` | True if the table is loading its data\n| scrollTop | `<number>` | The scrolling offset to apply initially to the table body\n| cellRange | `<CellRangeType>` | The range of selected cells. When omitted, cell selection is disabled\n\n`<ColumnType>` is an object, which contains the following keys:\n\n| Key             | Type              | Description                                         |\n|-----------------|-------------------|-----------------------------------------------------|\n| id              | `<string>`        | Unique id identifying the column\n| label           | `<string>`        | The label to display for this column\n| resizable       | `<bool>`          | True if the column can be resized\n| sortable        | `<bool>`          | True if the column can be sorted\n| minWidth        | `<number>`        | The min width of the column (in pixels)\n| width           | `<number>`        | The default width of the column (in pixels)\n| Cell            | `<elementType>`   | The React component to use for cells corresponding to this column\n| Filter          | `<elementType>`   | A React component to use to specify a filter is the column can be filtered\n| fixed           | `<bool>`          | True if the column remains fixed horizontally, false (default) otherwise (fixed columns cannot be preceded by a non-fixed column)\n| visible         | `<bool>`          | True if the column is visible (default), false otherwise\n| autoresize      | `<bool>`          | True if the column should autoresize\n\n`<CellRangeType>` is an object, which contains the following keys:\n\n| Key             | Type              | Description                                         |\n|-----------------|-------------------|-----------------------------------------------------|\n| col             | `<number>`        | The column-index of the leftmost cell in the range\n| row             | `<number>`        | The row-index of the topmost cell in the range\n| width           | `<number>`        | The number of columns in the range. If zero, no cell is selected\n| height          | `<number>`        | The number of rows in the range. If zero, no cell is selected"},"rowIdAttr":{"type":{"name":"string"},"required":false,"description":"Add this property to activate row selection. It specifies\nthe column id which is the primary key for rows."},"components":{"type":{"name":"custom","raw":"ComponentsType"},"required":false,"description":"A hash of custom components to replace those provided by the library:\n\n| Key             | Type              | Description                                         |\n|-----------------|-------------------|-----------------------------------------------------|\n| tr              | `<ComponentType>` | Component to instantiate to wrap each row       |\n| Pagination      | `<ComponentType>` | Component to instantiate to provide pagination   |\n| PaginationExtra | `<ComponentType>` | Component to instantiate to add extra information to the standard pagination component   |\n| Header          | `<ComponentType>` | Component to instantiate for column header  |\n\n`<ComponentType>` is an object, which contains the following keys:\n\n| Key        | Type         | Description                                                                        |\n|------------|--------------|------------------------------------------------------------------------------------|\n| type      | `<elementType>`   | The React component type |\n| props      | `<object>`   | A hash of React properties |"},"labels":{"type":{"name":"custom","raw":"LabelsType"},"required":false,"description":"A hash of key to labels to customize labels used by the table:\n\n| Key             |  Description                                         |\n|-----------------|------------------------------------------------------|\n| loading         | Displayed while the table is loading data  |\n| noData         | Displayed when there is no data in the table |\n| toggle         | Title of the checkbox used to select a row |\n| toggleAll         | Title of the checkbox used to select all rows                                         |\n| rows         | In pagination, title of a page size (should contain a ${value} placeholder where the page size will be injected)  |\n| page         | In pagination, 'page' label |\n| ofPages         | In pagination, 'of pages' label (should contain a ${pages} placeholder where the number of available pages will be injected) |\n| range         | In pagination, a label describing the current range being displayed (should contain ${first}, ${last} and ${total} placeholders where first row index, last row index, and total number of rows will be injected) |\n| firstPage         | In pagination, title of the first page button |\n| lastPage         | In pagination, title of the last page button |\n| nextPage         | In pagination, title of the next page button |\n| previousPage         | In pagination, title of the previous page button |"}}}],"src/Pagination.js":[{"description":"Component to handle pagination","displayName":"Pagination","methods":[],"props":{"state":{"type":{"name":"custom","raw":"TableStateType"},"required":false,"description":"The state of the pagination component (see [Table](./Table.md) for more details)"},"pageSizes":{"type":{"name":"arrayOf","value":{"name":"number"}},"required":false,"description":"An array of supported page sizes."}}}]}